// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: user.proto

package user

import (
	"context"

	"sk_mall/rpc/rpc_user/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Address                 = __.Address
	BaseResp                = __.BaseResp
	ChangeUserNicknameReq   = __.ChangeUserNicknameReq
	ChangeUserNicknameResp  = __.ChangeUserNicknameResp
	ChangeUserPwdReq        = __.ChangeUserPwdReq
	ChangeUserPwdResp       = __.ChangeUserPwdResp
	CreateAddrsByIdReq      = __.CreateAddrsByIdReq
	CreateAddrsByIdResp     = __.CreateAddrsByIdResp
	CreateUserReq           = __.CreateUserReq
	CreateUserResp          = __.CreateUserResp
	DeleteAddrByAddrIdReq   = __.DeleteAddrByAddrIdReq
	DeleteAddrByAddrIdResp  = __.DeleteAddrByAddrIdResp
	FrozenBalanceReq        = __.FrozenBalanceReq
	FrozenBalanceResq       = __.FrozenBalanceResq
	GetAddrsByIdReq         = __.GetAddrsByIdReq
	GetAddrsByIdResp        = __.GetAddrsByIdResp
	GetEmailCodeReq         = __.GetEmailCodeReq
	GetEmailCodeResp        = __.GetEmailCodeResp
	GetFrozenInfoReq        = __.GetFrozenInfoReq
	GetFrozenInfoResp       = __.GetFrozenInfoResp
	GetUserByIdReq          = __.GetUserByIdReq
	GetUserByIdResp         = __.GetUserByIdResp
	IncreaseBalanceReq      = __.IncreaseBalanceReq
	IncreaseBalanceResq     = __.IncreaseBalanceResq
	JwtAuthReq              = __.JwtAuthReq
	JwtAuthResp             = __.JwtAuthResp
	LoginReq                = __.LoginReq
	LoginResp               = __.LoginResp
	ReduceFrozenBalanceReq  = __.ReduceFrozenBalanceReq
	ReduceFrozenBalanceResp = __.ReduceFrozenBalanceResp
	UserInfo                = __.UserInfo

	User interface {
		CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserResp, error)
		GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		ChangeUserPwd(ctx context.Context, in *ChangeUserPwdReq, opts ...grpc.CallOption) (*ChangeUserPwdResp, error)
		ChangeUserNickname(ctx context.Context, in *ChangeUserNicknameReq, opts ...grpc.CallOption) (*ChangeUserNicknameResp, error)
		CreateUserAddrsById(ctx context.Context, in *CreateAddrsByIdReq, opts ...grpc.CallOption) (*CreateAddrsByIdResp, error)
		GetUserAddrsById(ctx context.Context, in *GetAddrsByIdReq, opts ...grpc.CallOption) (*GetAddrsByIdResp, error)
		DeleteAddrByAddrId(ctx context.Context, in *DeleteAddrByAddrIdReq, opts ...grpc.CallOption) (*DeleteAddrByAddrIdResp, error)
		IncreaseBalance(ctx context.Context, in *IncreaseBalanceReq, opts ...grpc.CallOption) (*IncreaseBalanceResq, error)
		GetEmailCode(ctx context.Context, in *GetEmailCodeReq, opts ...grpc.CallOption) (*GetEmailCodeResp, error)
		FrozenBalance(ctx context.Context, in *FrozenBalanceReq, opts ...grpc.CallOption) (*FrozenBalanceResq, error)
		ReduceFrozenBalance(ctx context.Context, in *ReduceFrozenBalanceReq, opts ...grpc.CallOption) (*ReduceFrozenBalanceResp, error)
		ComReduceFrozenBalance(ctx context.Context, in *ReduceFrozenBalanceReq, opts ...grpc.CallOption) (*ReduceFrozenBalanceResp, error)
		GetFrozenInfo(ctx context.Context, in *GetFrozenInfoReq, opts ...grpc.CallOption) (*GetFrozenInfoResp, error)
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		JwtAuth(ctx context.Context, in *JwtAuthReq, opts ...grpc.CallOption) (*JwtAuthResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}

func (m *defaultUser) GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

func (m *defaultUser) ChangeUserPwd(ctx context.Context, in *ChangeUserPwdReq, opts ...grpc.CallOption) (*ChangeUserPwdResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.ChangeUserPwd(ctx, in, opts...)
}

func (m *defaultUser) ChangeUserNickname(ctx context.Context, in *ChangeUserNicknameReq, opts ...grpc.CallOption) (*ChangeUserNicknameResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.ChangeUserNickname(ctx, in, opts...)
}

func (m *defaultUser) CreateUserAddrsById(ctx context.Context, in *CreateAddrsByIdReq, opts ...grpc.CallOption) (*CreateAddrsByIdResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.CreateUserAddrsById(ctx, in, opts...)
}

func (m *defaultUser) GetUserAddrsById(ctx context.Context, in *GetAddrsByIdReq, opts ...grpc.CallOption) (*GetAddrsByIdResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.GetUserAddrsById(ctx, in, opts...)
}

func (m *defaultUser) DeleteAddrByAddrId(ctx context.Context, in *DeleteAddrByAddrIdReq, opts ...grpc.CallOption) (*DeleteAddrByAddrIdResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.DeleteAddrByAddrId(ctx, in, opts...)
}

func (m *defaultUser) IncreaseBalance(ctx context.Context, in *IncreaseBalanceReq, opts ...grpc.CallOption) (*IncreaseBalanceResq, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.IncreaseBalance(ctx, in, opts...)
}

func (m *defaultUser) GetEmailCode(ctx context.Context, in *GetEmailCodeReq, opts ...grpc.CallOption) (*GetEmailCodeResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.GetEmailCode(ctx, in, opts...)
}

func (m *defaultUser) FrozenBalance(ctx context.Context, in *FrozenBalanceReq, opts ...grpc.CallOption) (*FrozenBalanceResq, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.FrozenBalance(ctx, in, opts...)
}

func (m *defaultUser) ReduceFrozenBalance(ctx context.Context, in *ReduceFrozenBalanceReq, opts ...grpc.CallOption) (*ReduceFrozenBalanceResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.ReduceFrozenBalance(ctx, in, opts...)
}

func (m *defaultUser) ComReduceFrozenBalance(ctx context.Context, in *ReduceFrozenBalanceReq, opts ...grpc.CallOption) (*ReduceFrozenBalanceResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.ComReduceFrozenBalance(ctx, in, opts...)
}

func (m *defaultUser) GetFrozenInfo(ctx context.Context, in *GetFrozenInfoReq, opts ...grpc.CallOption) (*GetFrozenInfoResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.GetFrozenInfo(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) JwtAuth(ctx context.Context, in *JwtAuthReq, opts ...grpc.CallOption) (*JwtAuthResp, error) {
	client := __.NewUserClient(m.cli.Conn())
	return client.JwtAuth(ctx, in, opts...)
}
