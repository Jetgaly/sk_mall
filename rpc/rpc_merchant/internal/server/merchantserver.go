// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: merchant.proto

package server

import (
	"context"

	"sk_mall/rpc/rpc_merchant/internal/logic"
	"sk_mall/rpc/rpc_merchant/internal/svc"
	"sk_mall/rpc/rpc_merchant/types"
)

type MerchantServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedMerchantServer
}

func NewMerchantServer(svcCtx *svc.ServiceContext) *MerchantServer {
	return &MerchantServer{
		svcCtx: svcCtx,
	}
}

func (s *MerchantServer) CreateMerchant(ctx context.Context, in *__.CreateMerchantReq) (*__.CreateMerchantResp, error) {
	l := logic.NewCreateMerchantLogic(ctx, s.svcCtx)
	return l.CreateMerchant(in)
}

func (s *MerchantServer) GetMerchantByMId(ctx context.Context, in *__.GetMerchantByMIdReq) (*__.GetMerchantByMIdResp, error) {
	l := logic.NewGetMerchantByMIdLogic(ctx, s.svcCtx)
	return l.GetMerchantByMId(in)
}

func (s *MerchantServer) GetMerchantId(ctx context.Context, in *__.GetMerchantIdReq) (*__.GetMerchantIdResp, error) {
	l := logic.NewGetMerchantIdLogic(ctx, s.svcCtx)
	return l.GetMerchantId(in)
}

func (s *MerchantServer) IncreaseBalance(ctx context.Context, in *__.IncreaseBalanceReq) (*__.IncreaseBalanceResp, error) {
	l := logic.NewIncreaseBalanceLogic(ctx, s.svcCtx)
	return l.IncreaseBalance(in)
}

func (s *MerchantServer) ComIncreaseBalance(ctx context.Context, in *__.IncreaseBalanceReq) (*__.IncreaseBalanceResp, error) {
	l := logic.NewComIncreaseBalanceLogic(ctx, s.svcCtx)
	return l.ComIncreaseBalance(in)
}
