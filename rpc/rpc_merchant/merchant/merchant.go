// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: merchant.proto

package merchant

import (
	"context"

	"sk_mall/rpc/rpc_merchant/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccInfo              = __.AccInfo
	AuthInfo             = __.AuthInfo
	BaseResp             = __.BaseResp
	CreateMerchantReq    = __.CreateMerchantReq
	CreateMerchantResp   = __.CreateMerchantResp
	GMerchantInfo        = __.GMerchantInfo
	GetMerchantByMIdReq  = __.GetMerchantByMIdReq
	GetMerchantByMIdResp = __.GetMerchantByMIdResp
	GetMerchantIdReq     = __.GetMerchantIdReq
	GetMerchantIdResp    = __.GetMerchantIdResp
	IncreaseBalanceReq   = __.IncreaseBalanceReq
	IncreaseBalanceResp  = __.IncreaseBalanceResp
	MerchantInfo         = __.MerchantInfo

	Merchant interface {
		CreateMerchant(ctx context.Context, in *CreateMerchantReq, opts ...grpc.CallOption) (*CreateMerchantResp, error)
		GetMerchantByMId(ctx context.Context, in *GetMerchantByMIdReq, opts ...grpc.CallOption) (*GetMerchantByMIdResp, error)
		GetMerchantId(ctx context.Context, in *GetMerchantIdReq, opts ...grpc.CallOption) (*GetMerchantIdResp, error)
		IncreaseBalance(ctx context.Context, in *IncreaseBalanceReq, opts ...grpc.CallOption) (*IncreaseBalanceResp, error)
		ComIncreaseBalance(ctx context.Context, in *IncreaseBalanceReq, opts ...grpc.CallOption) (*IncreaseBalanceResp, error)
	}

	defaultMerchant struct {
		cli zrpc.Client
	}
)

func NewMerchant(cli zrpc.Client) Merchant {
	return &defaultMerchant{
		cli: cli,
	}
}

func (m *defaultMerchant) CreateMerchant(ctx context.Context, in *CreateMerchantReq, opts ...grpc.CallOption) (*CreateMerchantResp, error) {
	client := __.NewMerchantClient(m.cli.Conn())
	return client.CreateMerchant(ctx, in, opts...)
}

func (m *defaultMerchant) GetMerchantByMId(ctx context.Context, in *GetMerchantByMIdReq, opts ...grpc.CallOption) (*GetMerchantByMIdResp, error) {
	client := __.NewMerchantClient(m.cli.Conn())
	return client.GetMerchantByMId(ctx, in, opts...)
}

func (m *defaultMerchant) GetMerchantId(ctx context.Context, in *GetMerchantIdReq, opts ...grpc.CallOption) (*GetMerchantIdResp, error) {
	client := __.NewMerchantClient(m.cli.Conn())
	return client.GetMerchantId(ctx, in, opts...)
}

func (m *defaultMerchant) IncreaseBalance(ctx context.Context, in *IncreaseBalanceReq, opts ...grpc.CallOption) (*IncreaseBalanceResp, error) {
	client := __.NewMerchantClient(m.cli.Conn())
	return client.IncreaseBalance(ctx, in, opts...)
}

func (m *defaultMerchant) ComIncreaseBalance(ctx context.Context, in *IncreaseBalanceReq, opts ...grpc.CallOption) (*IncreaseBalanceResp, error) {
	client := __.NewMerchantClient(m.cli.Conn())
	return client.ComIncreaseBalance(ctx, in, opts...)
}
