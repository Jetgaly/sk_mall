// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: cache_loader.proto

package cacheloader

import (
	"context"

	"sk_mall/rpc/cron/cache_loader/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty = __.Empty
	Pong  = __.Pong

	CacheLoader interface {
		Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pong, error)
	}

	defaultCacheLoader struct {
		cli zrpc.Client
	}
)

func NewCacheLoader(cli zrpc.Client) CacheLoader {
	return &defaultCacheLoader{
		cli: cli,
	}
}

func (m *defaultCacheLoader) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Pong, error) {
	client := __.NewCacheLoaderClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
