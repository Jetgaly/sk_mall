// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: payment.proto

package payment

import (
	"context"

	"sk_mall/rpc/rpc_payment/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseResp      = __.BaseResp
	PayOrderReq   = __.PayOrderReq
	PayOrderResp  = __.PayOrderResp
	SetPayLogReq  = __.SetPayLogReq
	SetPayLogResp = __.SetPayLogResp

	Payment interface {
		PayOrder(ctx context.Context, in *PayOrderReq, opts ...grpc.CallOption) (*PayOrderResp, error)
		SetPayLog(ctx context.Context, in *SetPayLogReq, opts ...grpc.CallOption) (*SetPayLogResp, error)
		ComSetPayLog(ctx context.Context, in *SetPayLogReq, opts ...grpc.CallOption) (*SetPayLogResp, error)
	}

	defaultPayment struct {
		cli zrpc.Client
	}
)

func NewPayment(cli zrpc.Client) Payment {
	return &defaultPayment{
		cli: cli,
	}
}

func (m *defaultPayment) PayOrder(ctx context.Context, in *PayOrderReq, opts ...grpc.CallOption) (*PayOrderResp, error) {
	client := __.NewPaymentClient(m.cli.Conn())
	return client.PayOrder(ctx, in, opts...)
}

func (m *defaultPayment) SetPayLog(ctx context.Context, in *SetPayLogReq, opts ...grpc.CallOption) (*SetPayLogResp, error) {
	client := __.NewPaymentClient(m.cli.Conn())
	return client.SetPayLog(ctx, in, opts...)
}

func (m *defaultPayment) ComSetPayLog(ctx context.Context, in *SetPayLogReq, opts ...grpc.CallOption) (*SetPayLogResp, error) {
	client := __.NewPaymentClient(m.cli.Conn())
	return client.ComSetPayLog(ctx, in, opts...)
}
