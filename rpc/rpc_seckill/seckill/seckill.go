// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: seckill.proto

package seckill

import (
	"context"

	"sk_mall/rpc/rpc_seckill/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseResp        = __.BaseResp
	CreateOrderReq  = __.CreateOrderReq
	CreateOrderResp = __.CreateOrderResp

	Seckill interface {
		CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
	}

	defaultSeckill struct {
		cli zrpc.Client
	}
)

func NewSeckill(cli zrpc.Client) Seckill {
	return &defaultSeckill{
		cli: cli,
	}
}

func (m *defaultSeckill) CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := __.NewSeckillClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}
